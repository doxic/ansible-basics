---
- hosts: web1
  vars:
    local_accounts_create:
    - user: dominic
      groups: wheel
      sshpubkey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCkT4Ctnu+HJ1F4nIQ+YPBMQyNzAtDAkrIa4QSJ2RFgRG8U3gaVQT4ABtMT/qNUdHQcbccdSQWxmYY3vpuiXDxkJbbqXxNmBcCuRZnpD63Bh1Vyq1o1+WqXBpiCsDxfPHA4F8a549xWhCRSTNahmTDz5yV18t/xRG+ZX5KAGekPHRmdJrTr+xtr/BThVrkw4gZEdtLjGPQLqQkPKhO2ihvLoyPbNrPKBVUkfAoWP+zmsed3RxfqrP1XCsaRu9UqgtNnSRt7pUGj+QekfqW26ql22vktiXnBbWyl8BXmpJBJwrqkpFVqdwdjBGOHmBKt/FERFjvBJqrNcn34XXNy7QDl vagrant@mgmt"
      # python -c 'import crypt; print crypt.crypt("test", crypt.mksalt(crypt.METHOD_SHA512))'
      password: $6$Gcq9thi0Cdb2zSgM$md0mjF5yCIms/OWa8sK1h04pccxh2h5nhUkXaMTxiUrqlFZT.A/gUC5AI6K/jCrBFzREuVaTXOA3ULKz.JICZ1
  remote_user: root

  tasks:

  - name: Create local user
    become: yes # activate privilege escalation
    # http://docs.ansible.com/ansible/latest/user_module.html
    user:
      append: yes # will only add groups
      createhome: yes # home directory will be made for the user
      groups: "{{ item.groups | default(omit) }}" # Puts the user in list of groups
      name: "{{ item.user }}" # Name of the user to create
      password: "{{ item.password | default(omit) }}" # set the user's password to this crypted value
      state: present
      uid: "{{ item.uid | default(omit) }}" # Optionally sets the UID of the user
      update_password: on_create # will only set the password for newly created users.
    with_items: "{{ local_accounts_create | default([]) }}"

  - name: Add SSH authorized keys
    become: yes # activate privilege escalation
    become_user: "{{ item.user }}"
    authorized_key:
      exclusive: no # Whether to remove all other non-specified keys from the authorized_keys file
      key: "{{ item.sshpubkey }}" #  SSH public key(s)
      manage_dir: no # Whether this module should manage the directory of the authorized key file
      state: present
      user: "{{ item.user }}"
    with_items: "{{ local_accounts_create | default([])}}"
    when: item.sshpubkey is defined
